#models =['aae','char_rnn','vae','organ']
models =['char_rnn','vae'] # organ fails to run
repeats = list(range(3))
trainsizes =[100,200,300,400]


# this newtraindata was generated by the moses datamaker and then linked to the moses 
# so moses wrote in there.. 
path = 'newtraindata'
import rdkitutils as rdk
import numpy as np
import main2 as main

def lc(model='aae',rep=0):
    p= rdk.moses_to_nx(f"{path}/ptest_{rep}.csv")
    n= rdk.moses_to_nx(f"{path}/ntest_{rep}.csv")
    scorer = main.make_scorer(p,n) 
    ms =[]
    base =[]
    for size in trainsizes: 
        p = rdk.moses_to_nx(f"{path}/p{size}_{rep}/train.csv")
        n = rdk.moses_to_nx(f"{path}/n{size}_{rep}/train.csv")
        op = list(rdk.smi_to_nx(f"{path}/p{size}_{rep}/{model}/gen"))
        on = list(rdk.smi_to_nx(f"{path}/n{size}_{rep}/{model}/gen"))
        ms.append(scorer(p+op,n+on))
        base.append(scorer(p,n))
    return ms,base

for model in models:
    print (model)
    a,b = list(zip(*[lc(model,x) for x in repeats]))
    print([ np.mean(x) for x in list(zip(*a))  ] )
    print([ np.mean(x) for x in list(zip(*b))  ] )


